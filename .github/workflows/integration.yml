name: Final Contionus integratio pipeline for Prepaid- GPR project
on:
  push:
    branches:
      - fork
  pull_request:
    types: [opened, synchronize, reopened]
    
    
    
jobs:

  sonar_scan:
    name: Sonar Scan- Code Sanity and Quality of Prepaid-GPR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=paycraftsolutions_TestingGitHubSec

      
          
  build_artifact:  
    name: Build and Upload artifact for Deployment 
    runs-on: ubuntu-latest
    needs: sonar_scan
    steps:
      - name: Checkout Github Action
        uses: actions/checkout@v2
        with:
            ref: 'develop'
        
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: maven build, clean
        run: |
          mvn clean package
          
       # mvn -s ./settings.xml clean package
      
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: 'testgitjar'
          path: '${{ github.workspace }}/target/*.jar'
          
          
          
  deploy_to_dev_env:
    name:  Deployment to DEV Env of prepaid-gpr 
    runs-on: ubuntu-latest
    needs: build_artifact
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: 'testgitjar'
          path: '${{ github.workspace }}/target/'
          
      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.DEV_AZURE_CREDENTIALS }}
          enable-AzPSSession: 'true' 
          allow-no-subscriptions: 'true'
          
      - name: deploy to DEV with artifact
        uses: azure/spring-cloud-deploy@v1
        with:
          azure-subscription: ${{ secrets.AZURE_SUBSCRIPTION }}
          action: Deploy
          service-name: prepaid-gpr-dev 
          app-name: testgit-cicd 
          use-staging-deployment: false
          package: ${{ github.workspace }}/target/*.jar 
          
          
          
  deployment_to_qa_env:      
    name:  Deployment to QA Env of prepaid-gpr 
    runs-on: ubuntu-latest
    needs: deploy_to_dev_env
    steps:
     - name: Download artifact from build job
       uses: actions/download-artifact@v2
       with:
        name: 'testgitjar'
        path: '${{ github.workspace }}/target/'
        
     - name: Login via Azure CLI
       uses: azure/login@v1
       with:
          creds: ${{ secrets.QA_AZURE_CREDENTIALS }}
          enable-AzPSSession: 'true' 
          allow-no-subscriptions: 'true'

     - name: deploy to QA with artifact
       uses: azure/spring-cloud-deploy@v1
       with:
          azure-subscription: ${{ secrets.AZURE_SUBSCRIPTION }}
          action: Deploy
          service-name: cloud-spring-qa-eastus2 
          app-name: testgit-cicd
          use-staging-deployment: false
          package: ${{ github.workspace }}/target/*.jar      
          
          
  deployment_to_perf_env:      
    name:  Deployment to PERF Env of prepaid-gpr 
    runs-on: ubuntu-latest
    needs: deployment_to_qa_env
    steps:
     - name: Download artifact from build job
       uses: actions/download-artifact@v2
       with:
        name: 'testgitjar'
        path: '${{ github.workspace }}/target/'
        
     - name: Login via Azure CLI
       uses: azure/login@v1
       with:
          creds: ${{ secrets.PERF_AZURE_CREDENTIALS }}
          enable-AzPSSession: 'true' 
          allow-no-subscriptions: 'true'

     - name: deploy to PERF with artifact
       uses: azure/spring-cloud-deploy@v1
       with:
          azure-subscription: ${{ secrets.AZURE_SUBSCRIPTION }}
          action: Deploy
          service-name: cloud-spring-perf-centralindia 
          app-name: testing-github
          use-staging-deployment: false
          package: ${{ github.workspace }}/target/*.jar
          name: Final Continuous Integration Pipeline for NCMC-DCMS-Shivalik Bank Project

  create_release_tag:
    name: Create Release Tag
    needs: build_artifact
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set Git User
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
      - name: Get Latest Git Tag
        id: get_latest_tag
        run: echo ::set-output name=tag::$(git describe --abbrev=0 --tags)
      - name: Create Release Tag
        id: create_tag
        uses: actions/github-script@v5
        with:
          script: |
            const {data: latestRelease} = await github.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const tag = "${{ steps.get_latest_tag.outputs.tag }}";
            await github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/" + tag,
              sha: latestRelease.target_commitish
            });
             github-token: ${{ secrets.GITHUB_TOKEN }}

